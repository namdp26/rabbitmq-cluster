---
- name: Setup /etc/hosts entries for RabbitMQ Clsuter
  lineinfile:
    path: /etc/hosts
    line: "{{ item.ip }} {{ item.hostname }}"
    state: present
  loop: "{{ rabbitmq_cluster_nodes }}"

- name: rabbitmq_clustering | stopping rabbitmq app # noqa no-changed-when
  command: rabbitmqctl stop_app
  when: inventory_hostname != rabbitmq_master

- name: rabbitmq_clustering | resetting rabbitmq app # noqa no-changed-when
  command: rabbitmqctl reset
  when: inventory_hostname != rabbitmq_master

- name: rabbitmq_clustering | stopping rabbitmq-server
  service:
    name: rabbitmq-server
    state: stopped

- name: rabbitmq_clustering | Capturing Erlang Cookie On Master # noqa no-changed-when
  command: "cat {{ rabbitmq_erlang_cookie_file }}"
  register: "rabbitmq_erlang_cookie"
  when: inventory_hostname == rabbitmq_master

- name: rabbitmq_clustering | Setting Erlang Cookie Of Master on Non-Master
  set_fact:
    rabbitmq_erlang_cookie: "{{ hostvars[rabbitmq_master]['rabbitmq_erlang_cookie']['stdout'] }}"
  when: inventory_hostname != rabbitmq_master

- name: rabbitmq_clustering | copy erlang cookie
  template:
    src: erlang.cookie.j2
    dest: "{{ rabbitmq_erlang_cookie_file }}"
    owner: rabbitmq
    group: rabbitmq
    mode: 0400
    backup: yes
  when: inventory_hostname != rabbitmq_master

- name: rabbitmq_clustering | restarting rabbitmq-server on master
  service:
    name: rabbitmq-server
    state: restarted
  when: inventory_hostname == rabbitmq_master

- name: rabbitmq_clustering | starting rabbitmq app on master # noqa no-changed-when
  command: rabbitmqctl start_app
  register: cluster_master
  when: inventory_hostname == rabbitmq_master

- name: rabbitmq_clustering | sending sigterm to any running rabbitmq processes # noqa no-changed-when
  shell: pkill -u rabbitmq || true
  when: inventory_hostname != rabbitmq_master

- name: rabbitmq_clustering | restarting rabbitmq-server
  service:
    name: rabbitmq-server
    state: restarted
  when: inventory_hostname != rabbitmq_master

- name: rabbitmq_clustering | stopping rabbitmq app # noqa no-changed-when
  command: rabbitmqctl stop_app
  when: inventory_hostname != rabbitmq_master

- name: rabbitmq_clustering | resetting rabbitmq app # noqa no-changed-when
  command: rabbitmqctl reset
  when: inventory_hostname != rabbitmq_master

- name: rabbitmq_clustering | joining rabbitmq cluster # noqa no-changed-when
  command: rabbitmqctl join_cluster "rabbit@{{ hostvars[rabbitmq_master]['ansible_hostname'] }}"
  register: cluster_joined
  when: inventory_hostname != rabbitmq_master

- name: rabbitmq_clustering | starting rabbitmq app # noqa no-changed-when
  command: rabbitmqctl start_app
  when: inventory_hostname != rabbitmq_master

- name: rabbitmq_clustering | marking as clustered # noqa no-handler
  file:
    path: /etc/rabbitmq/clustered
    state: touch
    mode: u=rw,g=r,o=r
  when: >
    cluster_master['changed'] or
    cluster_joined['changed']
